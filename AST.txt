program: {
	pages: [
		page: {
			extended page ID: null,
			ID: p1,
			title: "title",
			page body element: [
				if statement: {
					condition: string: {
					stringValue: I am not a logical expression,
				},
					if body elements: [
						text: {
							color : #ffffff,
							fontSize : 20,
							string: {
								stringValue: i am a text,
							},
						}
					],
					else body elements: [],
				},
				if statement: {
					condition: concatConcatenation: {
					operator: &&,
					leftCondition(TwoOperandCondition): {
						operator: >,
						leftOperand(decimalValue): {
							decimalValue: 3.0,
						},
						rightOperand(decimalValue): {
							decimalValue: 1.0,
						},
					},
					rightCondition(TwoOperandCondition): {
						operator: >,
						leftOperand(decimalValue): {
							decimalValue: 3.0,
						},
						rightOperand(decimalValue): {
							decimalValue: 2.0,
						},
					},
				},
					if body elements: [
						text: {
							color : #ffffff,
							fontSize : 20,
							string: {
								stringValue: i am a text,
							},
						}
					],
					else body elements: [],
				}
			],
		}
	],
	controllers: [
		controller: {
			controlled page ID: p1,
			ID: c1,
			controller body element: [
				Valid credentials check: {
					password: decimalValue: {
					decimalValue: 5.0,
				},
					unique identifier: decimalValue: {
					decimalValue: 5.0,
				},
				},
				Role check: {
					check role : decimalValue: {
					decimalValue: 55.0,
				},
				},
				variableDeclaration: {
					id: name,
					value(string): {
						stringValue: name,
					},
				},
				variableDeclaration: {
					id: password,
					value(string): {
						stringValue: password,
					},
				},
				variableDeclaration: {
					id: adminRole,
					value(string): {
						stringValue: admin,
					},
				},
				Valid credentials check: {
					password: variable/functionName: {
					name: password,
				},
					unique identifier: variable/functionName: {
					name: name,
				},
				},
				Role check: {
					check role : variable/functionName: {
					name: adminRole,
				},
				},
				Valid credentials check: {
					password: string: {
					stringValue: password,
				},
					unique identifier: string: {
					stringValue: name,
				},
				},
				Role check: {
					check role : string: {
					stringValue: role,
				},
				}
			],
		}
	],
}